{"version":3,"sources":["UnsplashImage.js","Button.js","Logo.js","Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["UnsplashImage","url","key","className","src","Button","Logo","Navigation","App","useState","images","setImages","loaded","setIsLoaded","useEffect","fetchImages","count","apiRoot","accessKey","axios","get","then","res","data","dataLength","next","hasMore","loader","alt","style","marginTop","map","image","index","urls","regular","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAWiBA,MATjB,YAAsC,IAAbC,EAAY,EAAZA,IAAKC,EAAO,EAAPA,IAE5B,OACE,qBAAKC,UAAU,aAAf,SACA,qBAAMC,IAAKH,KADsBC,I,MCKtBG,MARf,WACI,OACI,8BACI,wBAAQF,UAAU,SAAlB,6BCKGG,MARf,WACI,OACI,qBAAKH,UAAU,OAAf,SACI,+CCQGI,MAXf,WACI,OACI,sBAAKJ,UAAU,aAAf,UACI,wBAAQA,UAAU,UAAlB,kBACA,wBAAQA,UAAU,UAAlB,mBACA,wBAAQA,UAAU,UAAlB,kBACA,wBAAQA,UAAU,UAAlB,yBCoEGK,MAhEf,WAAgB,IAAD,EAEeC,mBAAS,IAFxB,mBAENC,EAFM,KAEEC,EAFF,OAGiBF,oBAAS,GAH1B,mBAGNG,EAHM,KAGEC,EAHF,KAKfC,qBAAU,WACNC,MACD,IAED,IAAMA,EAAc,WAAiB,IAAhBC,EAAe,uDAAP,GACrBC,EAAU,2BACVC,EAAY,8CAElBC,IACGC,IADH,UACUH,EADV,oCAC6CC,EAD7C,kBACgEF,IAC7DK,MAAM,SAAAC,GACLX,EAAU,GAAD,mBAAKD,GAAL,YAAgBY,EAAIC,QAC7BV,GAAY,OAIlB,OAEE,qCACA,sBAAKV,UAAU,iBAAf,UACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAGA,qBAAKA,UAAU,qCAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,aAAd,sCACA,oBAAIA,UAAU,gBAAd,8CAIF,cAAC,IAAD,CACAqB,WAAYd,EACZe,KAAM,kBAAMV,EAAY,IACxBW,SAAS,EACTC,OACC,qBACGvB,IAAI,2EACJwB,IAAI,eAPR,SAUA,qBAAKzB,UAAU,aAAa0B,MAAO,CAAEC,UAAW,QAAhD,SACIlB,EACGF,EAAOqB,KAAI,SAACC,EAAOC,GAAR,OACP,cAAC,EAAD,CAAehC,IAAK+B,EAAME,KAAKC,SAAcF,MAC7C,kBCrDNG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5ccb0c81.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\r\n\r\nfunction UnsplashImage({ url, key }) {\r\n\r\n  return (\r\n    <div className=\"image-item\" key={key} >\r\n    <img  src={url} />\r\n    </div>\r\n    );\r\n  }\r\n  \r\n  export default UnsplashImage\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nfunction Button() {\r\n    return (\r\n        <div >\r\n            <button className='button'>Get in Touch</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\n\r\nfunction Logo() {\r\n    return (\r\n        <div className='Logo'>\r\n            <h2>Posit Inn.</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo\r\n","import React from 'react'\r\n\r\nfunction Navigation() {\r\n    return (\r\n        <div className='Navigation'>\r\n            <button className='nav-btn'>Home</button>\r\n            <button className='nav-btn'>About</button>\r\n            <button className='nav-btn'>Work</button>\r\n            <button className='nav-btn'>Contact</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n","import React, {useState, useEffect} from 'react';\nimport axios from \"axios\";\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport UnsplashImage from './UnsplashImage';\nimport './App.css'\nimport Button from './Button';\nimport Logo from './Logo';\nimport Navigation from './Navigation';\n\n\n\n\nfunction App() {\n\n  const [images, setImages] = useState([]);\n  const [loaded, setIsLoaded] = useState(false);\n\nuseEffect(() => {\n    fetchImages();\n}, []);\n\n  const fetchImages = (count = 10) => {\n    const apiRoot = \"https://api.unsplash.com\";\n    const accessKey = \"Xptp6UfUmHbxhss1vmnxZGN9nwyLCm9_3l-DLCjJ2hY\";\n\n    axios\n      .get(`${apiRoot}/photos/random?client_id=${accessKey}&count=${count}`)\n      .then (res => {\n        setImages([...images, ...res.data]);\n        setIsLoaded(true);\n      });\n};\n\n  return (\n   \n    <>\n    <div className='navigation-bar'>\n    <Logo />\n    <Navigation />\n    <Button />\n    </div>\n\n    <div className=\"hero is-fullheight is-bold is-info\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <div className=\"header content\">\n            <h2 className=\"title is-6\">Posit internship project</h2>\n            <h1 className=\"subtitle is-1\">\n              Infinite Scroll with Unsplash \n            </h1>\n          </div>\n          <InfiniteScroll\n          dataLength={images}\n          next={() => fetchImages(5)}\n          hasMore={true}\n          loader={\n           <img\n              src=\"https://wpamelia.com/wp-content/uploads/2018/11/ezgif-2-6d0b072c3d3f.gif\"\n              alt=\"loading...\"\n           />}\n      >\n          <div className=\"image-grid\" style={{ marginTop: \"30px\" }}>\n             {loaded ?\n                 images.map((image, index) => (\n                     <UnsplashImage url={image.urls.regular} key={index} />\n                 )): \"\"}\n         </div>\n     </InfiniteScroll>\n        </div>\n      </div>\n    </div>\n    </>\n  );\n};\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}